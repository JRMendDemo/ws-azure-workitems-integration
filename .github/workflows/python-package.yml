# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set Environment Variables
      run: |
          TOOL_NAME=$(echo '${{ github.repository }}' |awk -F '/' '{gsub(/-/, "_", $0) ;print $NF}')
          echo "TOOL_NAME=$TOOL_NAME" >> $GITHUB_ENV
          echo "RELEASE=false" >> $GITHUB_ENV
          echo "VERSION=0.0.0.1" >> $GITHUB_ENV
          echo "TOOL_DIR=$TOOL_NAME" >> $GITHUB_ENV
          if [[ $GITHUB_REF == refs/tags/v* ]]; then
            echo "VERSION=$(echo ${{github.ref}} |  sed -r 's/^[\/a-zA-z-]+//')" >> $GITHUB_ENV
            if [[ $VERSION != *@(a|b)* ]]; then
              echo "RELEASE=true" >> $GITHUB_ENV
            fi
          fi
          echo ${{github.ref}}         
          ls ./ws-wi-integration/ws_wi_sync
    - uses: actions/checkout@v2
    - name: Set package version
      run: |
          sed -E -i  "s/^__version__ = \"[a-z0-9\.]+\"/__version__ = \"$VERSION\"/g"  ${{env.TOOL_DIR}}/ws_wi_sync/_version.py
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Create Wheel Package
      run: python setup.py bdist_wheel
    - name: Install Wheel package
      run: ls -1 dist/*.whl | xargs pip install
    - name: Publish to Test PyPI
      #if: startsWith(github.ref, 'refs/tags/test-v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          verbose: true
    - name: Publish to PyPI
      #if: startsWith(github.ref, 'refs/tags/v')
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
          skip_existing: true
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true
   # - name: Test with pytest
   #   run: |
   #     pytest
